library ieee;
use ieee.std_logic_1164.all;

entity tb_fullAdder is
end tb_fullAdder;

architecture tb of tb_fullAdder is

    component fullAdder
        port (a     : in std_logic;
              b     : in std_logic;
              c_in  : in std_logic;
              s     : out std_logic;
              c_out : out std_logic);
    end component;

    signal a     : std_logic;
    signal b     : std_logic;
    signal c_in  : std_logic;
    signal s     : std_logic;
    signal c_out : std_logic;

begin

    dut : fullAdder
    port map (a     => a,
              b     => b,
              c_in  => c_in,
              s     => s,
              c_out => c_out);

    process
    begin
        a <= '0';
        b <= '0';
        c_in <= '0';
        wait for 1 ns;
        assert (s='0') report "fail at 0/0/0" severity error;
        assert (c_out='0') report "fail at 0/0/0" severity error;
        
        a <= '0';
        b <= '0';
        c_in <= '1';
        wait for 1 ns;
        assert (s='1') report "fail at 0/0/1" severity error;
        assert (c_out='0') report "fail at 0/0/1" severity error;
        a <= '0';
        b <= '1';
        c_in <= '0';
        wait for 1 ns;
        assert (s='1') report "fail at 0/1/0" severity error;
        assert (c_out='0') report "fail at 0/1/0" severity error;
        
        a <= '0';
        b <= '1';
        c_in <= '1';
        wait for 1 ns;
        assert (s='0') report "fail at 0/1/1" severity error;
        assert (c_out='1') report "fail at 0/1/1" severity error;
        
        a <= '1';
        b <= '0';
        c_in <= '0';
        wait for 1 ns;
        assert (s='1') report "fail at 1/0/0" severity error;
        assert (c_out='0') report "fail at 1/0/0" severity error;
        
        a <= '1';
        b <= '0';
        c_in <= '1';
        wait for 1 ns;
        assert (s='0') report "fail at 1/0/1" severity error;
        assert (c_out='1') report "fail at 1/0/1" severity error;
        
        a <= '1';
        b <= '1';
        c_in <= '0';
        wait for 1 ns;
        assert (s='0') report "fail at 1/1/0" severity error;
        assert (c_out='1') report "fail at 1/1/0" severity error;
        
        a <= '1';
        b <= '1';
        c_in <= '1';
        wait for 1 ns;
        assert (s='1') report "fail at 1/1/1" severity error;
        assert (c_out='1') report "fail at 1/1/1" severity error;
        


        wait;
    end process;

end tb;